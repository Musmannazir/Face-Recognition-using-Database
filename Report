
Name:                        Muhammad Usman Nazir
Title:                            Recognition with Realtime Database for     
                                                                         Attendance System
course title:            AI201
Submitted to:         Amna Arooj

Abstract/Problem Statement:
This project addresses the challenges of manual attendance systems, including inefficiency, inaccuracy, and potential for misuse. By leveraging face recognition technology, the proposed system automates attendance tracking, ensuring secure, reliable, and real-time data management. The system uses a webcam to capture faces, processes images for face recognition, and updates attendance records in real time via a database. This approach minimizes manual effort, prevents duplicate entries, and enhances overall accuracy and convenience.
Introduction:
Black Box Running:
Inputs: Webcam feed capturing real-time images of students or employees.
Outputs: Attendance records updated in an Excel file, displaying the recognized userâ€™s name, registration number, and time of entry.
Scope:
Boundaries:
  - Focuses on face recognition for attendance tracking in educational or professional            environments.
  - Relies on locally stored student information and real-time database updates.
  - Limited to recognizing individuals pre-registered in the system.
Limitations:
  - Requires a clear and unobstructed face for accurate recognition.
  - Operates effectively within the quality limits of webcam hardware.
  - Potential latency when processing images for multiple users simultaneously.

Methodology:
Tools and Technologies Used:
1. Software:
   - Python for backend development.
   - Tkinter for GUI creation.
   - OpenCV and face_recognition libraries for image processing and face encoding.
   - OpenPyXL for Excel file manipulation.
2. Hardware:
   - Webcam for real-time image capture.
   - Standard computer hardware for processing.
Design Approach:
Core Functionalities:
  1. Face Recognition Algorithm:
     - Captures face images via webcam.
     - Generates face encodings using the face_recognition library.
     - Matches encodings with pre-stored data for authentication.
  2. GUI Interface:
     - Login and registration screens for user authentication.
     - Options to register new students, delete existing records, and take attendance.
  3. Database Management:
     - Attendance and student details stored in Excel sheets using OpenPyXL.
     - Data updates are instantaneous and accessible in real time.
      - System Workflow:
      1. Capture images using a webcam.
      2. Generate face encodings for detected faces.
      3. Compare encodings with the database to identify users.
      4. Update attendance records in the Excel file with timestamped entries.

Design Diagrams:
Use Case Diagram:

  Actors: Admin, Student/Employee.
  Actions: Register user, take attendance, update records, view attendance logs.

Activity Diagram:
  1. Start system and load student database.
  2. Capture face via webcam.
  3. Match face encoding with stored records.
  4. If matched, update attendance; else, display error.
Results:
Findings:
The project achieved a fully functional attendance system with the following key features:
1. Automated attendance marking based on face recognition.
2. Secure login and registration system for admin users.
3. Real-time updates to attendance records stored in an Excel database.
4. Simple and intuitive GUI for managing users and attendance.

Data Representation:
1. Attendance Record Sample (Excel):
| Name           | Reg No   | Time            |
|   -------------|   ----------|  ------------ |
| John Smith | 2023541 |   10:05:43 |
| Jane Doe     | 2023542 | 10:07:12   |

2. Screenshots (optional, if available):
- GUI showing login, registration, and attendance-taking functionalities.




- Excel file displaying updated attendance records.


Summary of Results:
The system accurately recognized users and updated attendance without errors. Attendance data was recorded with timestamps, providing a reliable and efficient method for attendance tracking.
Conclusion:
The "Face Recognition with Real-Time Database for Attendance System" project provides an efficient, secure, and modern solution to attendance management. By utilizing face recognition technology, the system eliminates manual errors, saves time, and enhances security. Python, OpenCV, and the face_recognition library served as the core technologies for implementing the system. While the system is effective for small to medium-scale environments, future work could explore scaling the solution for larger environments with advanced database integration and enhanced face recognition accuracy.
References:
References:
1. OpenCV Documentation: https://opencv.org/
2. face_recognition Library: https://github.com/ageitgey/face_recognition
3. Python Tkinter Documentation: https://docs.python.org/3/library/tkinter.html
